spring:
  application:
    name: demo

  kafka:
    bootstrap-servers: 49.232.133.15:9092
    producer:
      # 发生错误后，消息重发的次数。
      retries: 0
      #当有多个消息需要被发送到同一个分区时，生产者会把它们放在同一个批次里。该参数指定了一个批次可以使用的内存大小，按照字节数计算。
      batch-size: 16384
      # 设置生产者内存缓冲区的大小。
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。
      acks: 1
    consumer:
      # 自动提交的时间间隔 在spring boot 2.X 版本中这里采用的是值的类型为Duration 需要符合特定的格式，如1S,1M,2H,5D
      auto-commit-interval: 1S
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该作何处理：
      # latest（默认值）在偏移量无效的情况下，消费者将从最新的记录开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录
      auto-offset-reset: latest
      # 是否自动提交偏移量，默认值是true,为了避免出现重复数据和数据丢失，可以把它设置为false,然后手动提交偏移量
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: test-consumer-group
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      #listner负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false

server:
  port: 8080

machine_id: 1
topic: 999
rule: 3
cookie: UOR=www.solidot.org,widget.weibo.com,blog.csdn.net; SINAGLOBAL=2432030156555.166.1614309795477; ULV=1620984142500:3:1:1:1968716020053.9788.1620984142495:1618538546989; SUBP=0033WrSXqPxfM725Ws9jqgMF55529P9D9WWH8sZgENHoUiMErIEu-kal5JpX5KzhUgL.Fo-RS0n0e0.N1hz2dJLoI7UDdPDReKnc; SUB=_2A25Nm_jJDeRhGeNG7FoS8yfLwz6IHXVu0W0BrDV8PUNbmtAKLXeskW9NSxcGzzpNJyogkvXKJGAhoK8dK1bPhqnV; login_sid_t=08cb0ed264e9b597944d80c067d443e5; cross_origin_proto=SSL; _s_tentry=www.baidu.com; Apache=1968716020053.9788.1620984142495; ALF=1652603926; SSOLoginState=1621067926; wvr=6; webim_unReadCount=%7B%22time%22%3A1620984485905%2C%22dm_pub_total%22%3A0%2C%22chat_group_client%22%3A0%2C%22chat_group_notice%22%3A0%2C%22allcountNum%22%3A51%2C%22msgbox%22%3A0%7D; wb_view_log_5878339782=1368*9122

zookeeper:
  address: 49.232.133.15:2181
  timeout: 10000

  lock_path: /spider/lock
  nodes_path: /spider/nodes
  master_path: /spider/master

async:
    executor:
      thread:
        core_pool_size: 5
        # 配置最大线程数
        max_pool_size: 5
        # 配置队列大小
        queue_capacity: 99999
  # 配置线程池中的线程的名称前缀
        name:
          prefix: async-service-
